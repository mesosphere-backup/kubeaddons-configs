apiVersion: kubeaddons.mesosphere.io/v1alpha1
kind: Addon
metadata:
  name: traefik
  namespace: kubeaddons
  labels:
    kubeaddons.mesosphere.io/name: traefik
    kubeaddons.mesosphere.io/provides: ingresscontroller
  annotations:
    appversion.kubeaddons.mesosphere.io/traefik: "1.68.4"
    endpoint.kubeaddons.mesosphere.io/traefik: "/ops/portal/traefik"
    docs.kubeaddons.mesosphere.io/traefik: "https://docs.traefik.io/v1.7"
spec:
  kubernetes:
    minSupportedVersion: v1.15.0
  requires:
    matchLabels:
      kubeaddons.mesosphere.io/provides: defaultstorageclass
  chartReference:
    chart: traefik
    repo: https://mesosphere.github.io/charts/staging
    version: 1.71.3
    values: |
      ---
      replicas: 2
      service:
        labels:
          servicemonitor.kubeaddons.mesosphere.io/path: "metrics"
      resources:
        limits:
          cpu: 2000m
        requests:
          cpu: 1000m
      rbac:
        enabled: true
      metrics:
        prometheus:
          enabled: true
      dashboard:
        enabled: true
        domain: traefik.localhost.localdomain
        serviceType: ClusterIP
      kubernetes:
        ingressEndpoint:
          publishedService: "kubeaddons/traefik-kubeaddons"
      ssl:
        enabled: true
        enforced: true
        generateTLS: true
        # dex service is exposed with TLS certificate signed by self signed root
        # Dex CA certificate. It is not clear if traefik supports configuring
        # trusted certificates per backend. This should be investiaged in a
        # separate issue.
        # See: https://jira.mesosphere.com/browse/DCOS-56033
        insecureSkipVerify: true
        defaultCN: traefik.localhost.localdomain
        defaultSANList:
          - "*"
      forwardAuth:
        entryPoints:
        - https
        address: http://traefik-forward-auth-kubeaddons.kubeaddons.svc.cluster.local:4181/
        trustForwardHeader: false
        authResponseHeaders: ["X-Forwarded-User"]
