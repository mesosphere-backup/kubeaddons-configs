# ------------------------------------------------------------------------------
# Velero
#
#
# Velero is an open source backup and migration tool for Kubernetes.
# See more about Velero at:
#
# * https://velero.io/
# * https://github.com/heptio/velero
# * https://github.com/helm/charts/tree/master/stable/velero
#
#
# Implementation
#
#
# Our implementation of Velero currently supports S3 backends for storage, and by default if no configuration overrides are
# provided to point it at a backend other than the default, we will create and manage a distributed Minio (https://min.io/)
# cluster which uses the default storage class for the cluster to maintain the backups.
#
# WARNING: using the default (fallback) backend is for testing purposes only and should not be used in production.
#
# ------------------------------------------------------------------------------
---
apiVersion: kubeaddons.mesosphere.io/v1alpha1
kind: Addon
metadata:
  name: velero
  namespace: kubeaddons
  labels:
    kubeaddons.mesosphere.io/name: velero
spec:
  namespace: velero
  kubernetes:
    minSupportedVersion: v1.14.0
  requires:
    matchLabels:
      kubeaddons.mesosphere.io/provides: defaultstorageclass
  chartReference:
    chart: stable/velero
    version: 2.1.1
    values: |
      ---
      configuration:
        provider: "aws"
        backupStorageLocation:
          name: "aws"
          bucket: "velero"
          config:
            region: "fallback"     # enables non-production fallback minio backend
            s3ForcePathStyle: true # allows usage of fallback backend
            s3Url: http://minio.velero.svc:9000
        volumeSnapshotLocation:
          name: "aws"
          config:
            region: "fallback"
      credentials:
        secretContents:
          cloud: "placeholder"
      schedules:
        default:
          schedule: "0 0 * * *"
      metrics:
        enabled: true
      initContainers:
        # initialize-velero manages deploying a fallback backend (e.g. Minio) for Velero if needed,
        # and also will manage the credentials and secrets for that backend and Velero automatically.
        - name: initialize-velero
          image: kubeaddons/addon-initializer:v0.0.1-alpha
          args: ["velero"]
          env:
          - name: "VELERO_MINIO_FALLBACK_SECRET_NAME"
            value: "velero"
