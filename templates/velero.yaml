# ------------------------------------------------------------------------------
# Velero
#
#
# Velero is an open source backup and migration tool for Kubernetes.
# See more about Velero at:
#
# * https://velero.io/
# * https://github.com/heptio/velero
# * https://github.com/helm/charts/tree/master/stable/velero
#
#
# Implementation
#
#
# Our implementation of Velero currently supports S3 backends for storage, and by default if no configuration overrides are
# provided to point it at a backend other than the default, we will create and manage a distributed Minio (https://min.io/)
# cluster which uses the default storage class for the cluster to maintain the backups.
#
# WARNING: using the default (fallback) backend is for testing purposes only and should not be used in production.
#
#
# Testing
#
#
# If you would like to test this Addon without deploying the suite of Addons you can deploy it to any cluster with the following:
#
#   export VELERO_VALUES="$(perl -MYAML::XS -e 'local $/; $y = Load <>; print $y->{spec}{chartReference}{values}' templates/velero.yaml)"
#   export VELERO_VERSION="$(perl -MYAML::XS -e 'local $/; $y = Load <>; print $y->{spec}{chartReference}{version}' templates/velero.yaml)"
#   echo "$VELERO_VALUES" | helm install --name velero --namespace velero stable/velero --version $VELERO_VERSION -f -
#
# Watch the pods and wait for everything to fully come online with:
#
#   kubectl -n velero get pods -w
#
# To use Velero via its' CLI tool, you'll need to download the tool from the repo:
#
#  * https://github.com/heptio/velero/releases
#
# You can view the default schedules with:
#
#   velero get schedules
#
# And schedule an initial backup with:
#
#   velero backup create initial-backup
#
# NOTE: By default we do not expose Velero or any of its components (e.g. Minio) outside of the cluster for security reasons.
#       You'll need to utilize a proxy like `kubectl -n velero port-forward svc/minio 9000:9000` in order to do things like
#       `velero backup download initial-backup`.
#
# Clean up when you're done with:
#
#   helm delete --purge velero
#
# ------------------------------------------------------------------------------
---
apiVersion: kubeaddons.mesosphere.io/v1alpha1
kind: Addon
metadata:
  name: velero
  namespace: kubeaddons
  labels:
    kubeaddons.mesosphere.io/name: velero
spec:
  namespace: velero
  kubernetes:
    minSupportedVersion: v1.14.0
  requires:
    matchLabels:
      kubeaddons.mesosphere.io/provides: defaultstorageclass
  chartReference:
    chart: stable/velero
    version: 2.1.1
    values: |
      ---
      configuration:
        provider: "aws"
        backupStorageLocation:
          name: "aws"
          bucket: "velero"
          config:
            region: "fallback"     # enables non-production fallback minio backend
            s3ForcePathStyle: true # allows usage of fallback backend
            s3Url: http://minio.velero.svc:9000
        volumeSnapshotLocation:
          name: "aws"
          config:
            region: "fallback"
      credentials:
        secretContents:
          cloud: "placeholder"
      schedules:
        default:
          schedule: "0 0 * * *"
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
      initContainers:
        # initialize-velero manages deploying a fallback backend (e.g. Minio) for Velero if needed,
        # and also will manage the credentials and secrets for that backend and Velero automatically.
        - name: initialize-velero
          image: kubeaddons/addon-initializer:v0.0.1-alpha
          args: ["velero"]
          env:
          - name: "VELERO_MINIO_FALLBACK_SECRET_NAME"
            value: "velero"
