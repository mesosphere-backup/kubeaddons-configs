apiVersion: kubeaddons.mesosphere.io/v1alpha1
kind: Addon
metadata:
  name: prometheus
  namespace: kubeaddons
  labels:
    kubeaddons.mesosphere.io/name: prometheus
  annotations:
    appversion.kubeaddons.mesosphere.io: "0.31.1"
    endpoint.kubeaddons.mesosphere.io/prometheus: "/ops/portal/prometheus"
    endpoint.kubeaddons.mesosphere.io/alertmanager: "/ops/portal/alertmanager"
    endpoint.kubeaddons.mesosphere.io/grafana: "/ops/portal/grafana"
spec:
  kubernetes:
    minSupportedVersion: v1.14.0
  cloudProvider:
    - name: aws
      enabled: true
    - name: docker
      enabled: false
    - name: none
      enabled: true
  chartReference:
    chart: stable/prometheus-operator
    version: 5.10.0
    values: |
      ---
      prometheus:
        additionalServiceMonitors:
          - name: kubeaddons-service-monitor-metrics
            selector:
              matchLabels:
                servicemonitor.kubeaddons.mesosphere.io/path: "metrics"
            namespaceSelector:
              matchNames:
                - kubeaddons
            endpoints:
              - port: metrics
                interval: 30s
          - name: kubeaddons-service-monitor-api-v1-metrics-prometheus
            selector:
              matchLabels:
                servicemonitor.kubeaddons.mesosphere.io/path: "api__v1__metrics__prometheus"
            namespaceSelector:
              matchNames:
                - kubeaddons
            endpoints:
              - path: /api/v1/metrics/prometheus
                port: metrics
                interval: 30s
        prometheusSpec:
          additionalScrapeConfigs:
            - job_name: 'kubernetes-nodes-containerd'
              metrics_path: /v1/metrics
              tls_config:
                ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
              kubernetes_sd_configs:
                - role: node
              relabel_configs:
                - source_labels: [__address__]
                  regex: '(.*):10250'
                  replacement: '${1}:1338'
                  target_label: __address__
          enableAdminAPI: true
          secrets:
            - etcd-certs
          externalUrl: "/ops/portal/prometheus"
          storageSpec:
            volumeClaimTemplate:
              metadata:
                name: db
              spec:
                accessModes: ["ReadWriteOnce"]
                # 50Gi is the default size for the chart
                resources:
                  requests:
                    storage: 1Gi
          resources:
            limits:
              cpu: 1000m
              memory: 2000Mi
            requests:
              cpu: 200m
              memory: 1000Mi
      alertmanager:
        alertmanagerSpec:
          resources:
            limits:
              cpu: 100m
              memory: 50Mi
            requests:
              cpu: 10m
              memory: 50Mi
      grafana:
        grafana.ini:
          server:
            protocol: http
            enable_gzip: true
            root_url: "%(protocol)s://%(domain)s:%(http_port)s/ops/portal/grafana"
          auth.proxy:
            enabled: true
            header_name: X-WEBAUTH-USER
            auto-sign-up: true
          auth.basic:
            enabled: false
          users:
            auto_assign_org_role: Admin
        service:
          type: ClusterIP
          port: 3000
        resources:
          # keep request = limit to keep this container in guaranteed class
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 50m
            memory: 100Mi
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 60
          timeoutSeconds: 30
          failureThreshold: 10
        rbac:
          pspUseAppArmor: false
      kubeEtcd:
        enabled: true
        serviceMonitor:
          scheme: "https"
          caFile: "/etc/prometheus/secrets/etcd-certs/ca.crt"
          certFile: "/etc/prometheus/secrets/etcd-certs/server.crt"
          keyFile: "/etc/prometheus/secrets/etcd-certs/server.key"
